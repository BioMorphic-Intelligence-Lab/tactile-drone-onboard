cmake_minimum_required(VERSION 3.8)
project(encoders)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(sensor_msgs REQUIRED)

add_executable(encoder_node src/encoder_node.cpp
                            src/cui-devices-amt-10x-driver/cui_devices_amt10x.cpp)
ament_target_dependencies(encoder_node rclcpp sensor_msgs)
target_link_libraries(encoder_node ${catkin_LIBRARIES} -lwiringPi)
target_include_directories(encoder_node PUBLIC include/encoders src/cui-devices-amt-10x-driver)

install(TARGETS
  encoder_node
  DESTINATION lib/${PROJECT_NAME})

# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
